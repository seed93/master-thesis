#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass thuthesis
\begin_preamble
\input{preamble}
\end_preamble
\options doctor,xetex
\use_default_options true
\master main.lyx
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding utf8-plain
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format pdf4
\output_sync 1
\bibtex_command default
\index_command default
\float_placement tbph
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
多相机标定算法
\begin_inset CommandInset label
LatexCommand label
name "chap:多相机标定算法"

\end_inset


\end_layout

\begin_layout Standard
在多相机拍摄系统中，相机参数标定是至关重要的一步，只有获得精确的相机参数。才能进一步完成精确的像素匹配，从而获得准确的三维模型。本章将首先简要介绍相机的成像和标
定原理。由于在第一套采集系统中包含了高精度小视角的普通彩色相机以及低精度大视角的Kinect二代深度相机，本章将在
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:高精度彩色相机标定"

\end_inset

节介绍普通彩色相机之间的标定方法，
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:多视角不同分辨率相机标定"

\end_inset

节介绍对两个相机系统建立关联的标定算法。其中
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:高精度彩色相机标定"

\end_inset

节介绍的方法可推广至任意相机阵列，
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:多视角不同分辨率相机标定"

\end_inset

节的方法适用于不同分辨率、不同焦距相机系统标定。Kinect本身包含有深度相机和彩色相机，这二者也具有各自的内参和相对外参，这些参数不会改变，可认为是双目相机系
统，前人已有较多工作，关于这二者的标定本文不再赘述。
\end_layout

\begin_layout Standard
为了方便描述，以下用加粗大写字符表示矩阵和三维点坐标，用加粗小写字符表示向量和二维点坐标，非加粗字体表示一维变量，下标带有
\begin_inset Formula $c$
\end_inset

表示相机坐标系，
\begin_inset Formula $w$
\end_inset

表示世界坐标系。
\end_layout

\begin_layout Section
相机成像及标定原理
\begin_inset CommandInset label
LatexCommand label
name "sec:相机成像及标定原理"

\end_inset


\end_layout

\begin_layout Standard
计算机视觉中有多种相机模型，如针孔模型、无穷远中心模型等。通常认为相机模型是一个针孔模型，也称为线性模型。在该模型假设下，物理空间中的点在相机图像中的成像是一个
透视成像的过程，该过程可以通过一系列相机参数来描述，参数包括内部参数和外部参数，以下分别简称为内参和外参。内参描述了相机坐标系和图像坐标系的关系，是单个相机本征
属性，包括主点位置、焦距、畸变系数等，一旦相机本身不发生变化（比如芯片相对镜头的位置、镜头的焦距等），则内参将保持固定，与其他因素无关。外参描述了相机坐标系和世
界坐标系的关联，可以将处于同一世界坐标系的不同相机的坐标联系起来，外参由相机之间的相对位置决定。具体来说如下：
\begin_inset Formula 
\begin{equation}
\begin{pmatrix}u\\
v\\
1
\end{pmatrix}=s\mbi M\mbi F\begin{pmatrix}X_{w}\\
Y_{w}\\
Z_{w}\\
1
\end{pmatrix}
\end{equation}

\end_inset

其中
\begin_inset Formula $(u,v)$
\end_inset

是点在图像上的坐标，
\begin_inset Formula $s$
\end_inset

是用于归一化以保证等式成立的系数，
\begin_inset Formula $(X_{w,}Y_{w},Z_{w})$
\end_inset

是点在世界坐标系中的坐标。
\begin_inset Formula $\mbi M,\mbi F$
\end_inset

分别表示内参和外参矩阵，具体来说
\begin_inset Formula 
\begin{equation}
\mbi M=\begin{bmatrix}f_{x} & \alpha & c_{x}\\
0 & f_{y} & c_{y}\\
0 & 0 & 1
\end{bmatrix}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\begin{pmatrix}X_{c}\\
Y_{c}\\
Z_{c}
\end{pmatrix}=\mbi F\begin{pmatrix}X_{w}\\
Y_{w}\\
Z_{w}\\
1
\end{pmatrix}=\begin{bmatrix}\mbi R & \mbi T\end{bmatrix}\begin{pmatrix}X_{w}\\
Y_{w}\\
Z_{w}\\
1
\end{pmatrix}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $f_{x},f_{y}$
\end_inset

是相机
\begin_inset Formula $x,y$
\end_inset

方向的焦距，单位一般为毫米，
\begin_inset Formula $c_{x},c_{y}$
\end_inset

是主点坐标，
\begin_inset Formula $\alpha$
\end_inset

是畸变系数，构成内参矩阵。主点表示相机中心在图像上的位置，通常为图片中心附近。
\begin_inset Formula $\mbi R$
\end_inset

是
\begin_inset Formula $3\times3$
\end_inset

的旋转矩阵（正交矩阵），
\begin_inset Formula $\mbi T$
\end_inset

是平移向量，单位为长度单位，如毫米、米，构成外参矩阵，联系了相机坐标系和世界坐标系。
\begin_inset Formula $(X_{c,}Y_{c},Z_{c})$
\end_inset

是点在相机坐标系中的三维坐标。
\end_layout

\begin_layout Standard
以上假定相机为线性模型，然而实际中相机均有非线性畸变，包括径向畸变和切向畸变。对于径向畸变，离图像中心越远的点畸变越严重。
\begin_inset Formula 
\begin{equation}
\begin{pmatrix}u'\\
v'
\end{pmatrix}=L(r)\begin{pmatrix}u\\
v
\end{pmatrix}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
用
\begin_inset Formula $u',v'$
\end_inset

表示矫正后的二维坐标，
\begin_inset Formula $L(r)$
\end_inset

表示只与
\begin_inset Formula $r$
\end_inset

有关的函数，其中
\begin_inset Formula $r=\sqrt{\left(u-c_{x}\right)^{2}+\left(v-c_{y}\right)^{2}}$
\end_inset

，且
\begin_inset Formula $L(r)$
\end_inset

为偶函数。对
\begin_inset Formula $L(r)$
\end_inset

做泰勒展开得到
\begin_inset Formula $L(r)=1+\kappa_{1}r^{2}+\kappa_{2}r^{4}+\kappa_{3}r^{6}+\cdots$
\end_inset

，一般取三项已足够，因此
\begin_inset Formula $\kappa_{1},\kappa_{2},\kappa_{3}$
\end_inset

也作为相机内参一部分待标定。
\end_layout

\begin_layout Standard
对于切向畸变，对倾斜做校正，具体公式如下
\begin_inset Formula 
\begin{equation}
\begin{aligned}u' & = & u\left(1+\kappa_{1}r^{2}+\kappa_{2}r^{4}+\kappa_{3}r^{6}\right)+2p_{1}uv+p_{2}\left(r^{2}+2u^{2}\right)\\
v' & = & v\left(1+\kappa_{1}r^{2}+\kappa_{2}r^{4}+\kappa_{3}r^{6}\right)+p_{1}\left(r^{2}+2v^{2}\right)+2p_{2}uv
\end{aligned}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $p_{1},p_{2}$
\end_inset

也作为内参一部分待标定。由上可知，给定世界坐标系下的点
\begin_inset Formula $(X_{w,}Y_{w},Z_{w})$
\end_inset

即可唯一确定图像上的点
\begin_inset Formula $(u,v)$
\end_inset

，经过畸变矫正可得到真实图片上的点
\begin_inset Formula $(u',v')$
\end_inset

。但因为
\begin_inset Formula $\mbi M$
\end_inset

不可逆，反过来却不成立，这也就是三维重建的核心：需要通过找到两个视角下的图像坐标才可以得到三维点坐标。然而如何在两张图片上找到对应点却很难，如果没有相机参数，每
个点都有可能和另一张图上的所有点对应，这样查找不仅费时而且容易出错，有关得到相机参数后如何通过对齐限制寻找范围将在
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:对极线矫正"

\end_inset

介绍。标定就是为了得到每个相机的内外参数。
\end_layout

\begin_layout Section
高精度彩色相机标定
\begin_inset CommandInset label
LatexCommand label
name "sec:高精度彩色相机标定"

\end_inset


\end_layout

\begin_layout Subsection
标定球介绍
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/ball.jpg
	lyxscale 10
	height 4cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
标定球 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/pattern_new.jpg
	lyxscale 10
	height 4cm
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
标记面片 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:marker"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
标定球示意图
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
由于本文所述三套系统均为曲面相机阵列，因此标定物选择球最为合适，可以让各个角度相机都看到相似图片，使用相同算法标定。球的大小和人头相近，直径为25厘米，可以占据
大部分画面。标定时将标定球置于相机阵列的拍摄中心，采集时人头正好替换标定球的位置。标定球选用纯色球，方便后期分割、寻找标定点，尽量选择不反光表面，高光对后期处理
影响较大。
\end_layout

\begin_layout Standard
为了让所有相机都能看到标记点，本文选择在球面上放置标记面片。每个标记面片上包含两个标记点，为了减少找到错误标记点的可能性，标记面片上尽量减少了较大的梯度变化。每
个标记点中心黑白相间，并随着半径变大渐变到中灰色，两个标记点的交接有一段纯中灰色过渡，防止出现剧烈梯度变化，而标记点中心黑白反差明显，在不同光照下仍能鲁棒找到标
记点。需要指出的是，两个标记点采用对称设计，有顺序区分，在之后标记点匹配时可以大大减少误匹配。
\end_layout

\begin_layout Subsection
算法步骤
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/temp_0.jpg
	lyxscale 2
	width 24col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
边缘检测
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:边缘"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/out_0.jpg
	lyxscale 2
	width 24col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
圆形拟合
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:大球"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/0.jpg
	lyxscale 2
	width 24col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
分割标定球
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/0_mask.jpg
	lyxscale 2
	width 24col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
标记面片分割
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:分割标记点"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/before_sba.JPG
	lyxscale 2
	width 24col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
标记点定位
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:before_sba"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/after_sba.JPG
	lyxscale 2
	width 24col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
最终结果
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:after_sba"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
多相机标定算法流程
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:标定流程"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:标定流程"

\end_inset

简述了标定算法流程中每一步得到的结果。整体上分为两部分，第一步需要给出每个相机的初始内参、外参估计，以及每个视角下的标记点的二维投影坐标、空间三维坐标，第二步结
合上述信息，光束平差法优化得到最终标定结果，通过反投影误差反应标定精度。
\end_layout

\begin_layout Standard
具体来说，首先需要分割标定球，具体做法是通过边缘检测得到边缘信息，利用RANSAC找到图像中最大的圆，然后利用图像分割算法将标记面片和标定球分割开，接着对每个标
记面片进行特征点提取和定位，形成大量有序标记点对，经过一系列几何计算得到初始估计值。
\end_layout

\begin_layout Standard
RANSAC（RANdom SAmple Consensus）
\begin_inset CommandInset citation
LatexCommand cite
key "fischler1981random"

\end_inset

由Fischler等人于1981年提出，该方法在给定一组样本和模型条件下，拟合找到最合适的模型参数。该方法最大的特点是能够区分内点和外点（噪声点），只有内点才会
对模型参数有贡献，对噪声具有较强的鲁棒性。该方法首先随机选择尽可能少的样本点来估计模型，被选择的点被认为是内点，其他为外点，对所有外点计算其与模型的契合程度，若
误差足够小则被归为内点，当所有点都被划分，记录内点数量和误差之和。不断的采样尝试，选择误差最小的模型为最佳匹配。该方法在本文将被多次使用，故在此一并介绍。
\end_layout

\begin_layout Standard
下面对标定的每一步做详细介绍。
\end_layout

\begin_layout Subsubsection
寻找球心及半径
\begin_inset CommandInset label
LatexCommand label
name "sub:寻找球心及半径"

\end_inset


\end_layout

\begin_layout Standard
该任务要在一张图片中找到标定球。为了增强鲁棒性，在拍摄标定照片时同时拍摄了没有放置标定球时的纯背景，方便图像分割。因此输入时两张图片，一张有标定球，一张没有，输
出是球心和半径。
\end_layout

\begin_layout Standard
最常用的识别圆形的算法是利用霍夫变换，但经过尝试，效果很差，因此本文采用了RANSAC算法，能够鲁棒地找到图片中符合要求的圆形，从而计算球心和半径。具体如下：
\end_layout

\begin_layout Enumerate
两张图片相减，对结果做高斯模糊、闭运算、阈值化得到初始结果，此时整个圆已经被分出，但部分背景也被分出；
\end_layout

\begin_layout Enumerate
做连通性判断，找到最大连通域，提取其边缘作为前景
\begin_inset CommandInset label
LatexCommand label
name "enu:边缘"

\end_inset

，得到图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:边缘"

\end_inset

；
\end_layout

\begin_layout Enumerate
RANSAC
\end_layout

\begin_deeper
\begin_layout Enumerate
人工指定圆形的最小半径、最大半径、距离阈值；
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:取点"

\end_inset

随机取三点，计算出通过这三点唯一确定的圆形（如果共线、半径不符合要求、圆超出图像则重新选取三点），由
\begin_inset Formula 
\begin{equation}
\left\{ \begin{aligned}\left(x_{1}-x_{c}\right)^{2}+\left(y_{1}-y_{c}\right)^{2} & =r^{2}\\
\left(x_{2}-x_{c}\right)^{2}+\left(y_{2}-y_{c}\right)^{2} & =r^{2}\\
\left(x_{3}-x_{c}\right)^{2}+\left(y_{3}-y_{c}\right)^{2} & =r^{2}
\end{aligned}
\right.
\end{equation}

\end_inset

解得
\begin_inset Formula 
\begin{equation}
\left\{ \begin{aligned}x_{c}= & \frac{\left(x_{1}^{2}+y_{1}^{2}\right)\left(y_{2}-y_{3}\right)+\left(x_{2}^{2}+y_{2}^{2}\right)\left(y_{3}-y_{1}\right)+\left(x_{3}^{2}+y_{3}^{2}\right)\left(y_{1}-y_{2}\right)}{2\left(x_{1}\left(y_{2}-y_{3}\right)+x_{2}\left(y_{3}-y_{1}\right)+x_{3}\left(y_{1}-y_{2}\right)\right)}\\
y_{c}= & \frac{\left(x_{1}^{2}+y_{1}^{2}\right)\left(x_{3}-x_{2}\right)+\left(x_{2}^{2}+y_{2}^{2}\right)\left(x_{1}-x_{3}\right)+\left(x_{3}^{2}+y_{3}^{2}\right)\left(x_{2}-x_{1}\right)}{2\left(x_{1}\left(y_{2}-y_{3}\right)+x_{2}\left(y_{3}-y_{1}\right)+x_{3}\left(y_{1}-y_{2}\right)\right)}\\
r= & \sqrt{\left(x_{1}-x_{c}\right)^{2}+\left(y_{1}-y_{c}\right)^{2}}
\end{aligned}
\right.
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
计算图片中每个前景点离该圆的最近距离，如果距离小于一个预先给定的阈值则认为该前景点也是圆上的点；
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:算点"

\end_inset

根据上一步规则统计符合当前圆形的点数；
\end_layout

\begin_layout Enumerate
重复
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:取点"

\end_inset

~
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:算点"

\end_inset

，找到点数最多的圆，圆心记为
\begin_inset Formula $(x_{c},y_{c})$
\end_inset

，半径为
\begin_inset Formula $r$
\end_inset

。
\end_layout

\begin_layout Standard
经过以上步骤，即可得到如图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:大球"

\end_inset

所示的圆形。
\end_layout

\end_deeper
\begin_layout Enumerate
记球心在相机坐标系下的坐标为
\begin_inset Formula $(X_{cc},Y_{cc},Z_{cc})$
\end_inset

，标定球的实际半径为
\begin_inset Formula $R$
\end_inset

，则
\begin_inset Formula 
\begin{equation}
\left\{ \begin{aligned}X_{cc} & =\frac{R}{r}(x_{c}-c_{x})\\
Y_{cc} & =\frac{R}{r}(y_{c}-c_{y})\\
Z_{cc} & =\frac{R}{r}f
\end{aligned}
\right.
\end{equation}

\end_inset


\begin_inset Newline newline
\end_inset

这里的主点和焦距均为预设值，主点初始为图像中心，焦距根据经验设定。
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
该算法做了如下合理假设：
\end_layout

\begin_layout Enumerate
球在图片上的投影是圆形（理论上是椭圆）；
\end_layout

\begin_layout Enumerate
圆心与主点接近，球心深度可以用
\begin_inset Formula ${\displaystyle Z_{cc}=\frac{R}{r}f}$
\end_inset

近似。
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
本算法可以给出一个近似的球心和半径，以上两个假设在实际中基本成立，且对后面几步处理影响不大。
\end_layout

\begin_layout Subsubsection
寻找标记点
\begin_inset CommandInset label
LatexCommand label
name "sub:寻找标记点"

\end_inset


\end_layout

\begin_layout Standard
找标记点本质上是一个寻找角点的任务，为了保证标定精度，不能找到错误点，因此本文通过以下步骤最大程度保证了正确性：
\end_layout

\begin_layout Enumerate
在
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:寻找球心及半径"

\end_inset

节已经找到了圆形，即标记面片所在的可能位置，分割得到面片的掩膜，如图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:分割标记点"

\end_inset

。具体分割算法如下；
\end_layout

\begin_deeper
\begin_layout Enumerate
高斯模糊，得到一张近似的背景图片
\end_layout

\begin_layout Enumerate
和原图相减得到大概的分割结果
\end_layout

\begin_layout Enumerate
使用自适应阈值分割方法得到合适的阈值进行分割
\end_layout

\begin_layout Enumerate
填充空洞
\end_layout

\end_deeper
\begin_layout Enumerate
利用角点检测算法得到标记点的候选点；
\end_layout

\begin_layout Enumerate
分离每个标记面片，判断面片包含的点的个数，如果点数不是2则舍去该面片；
\end_layout

\begin_layout Enumerate
区分面片内点的顺序：在两点连线的1/8处做一条垂线，延伸出一定距离获得两点像素，比较其像素值大小，即可区分顺序。示意见图
\begin_inset CommandInset ref
LatexCommand ref
reference "标记点示意"

\end_inset

，记每个标记点其连线方向为各自的右方，标记点的右上方比右下方颜色深则认为是整图中的左边点，否则是右边点。
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/pattern1.jpg
	lyxscale 10
	height 4cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
标记面片示意图
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "标记点示意"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
估计初始外参
\end_layout

\begin_layout Standard
在非线性优化前要给出一个外参的近似结果，以及各个二维点对应的三维点，还有这些三维点在每个视角上的可见性。估计外参时，相机两两做匹配，依次通过级联得到相对于第一个
相机的旋转平移矩阵。本节将对这些步骤作详细介绍。
\end_layout

\begin_layout Paragraph
生成点云
\end_layout

\begin_layout Standard
基于
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:寻找球心及半径"

\end_inset

节的假设，在已知球心坐标的前提下，根据球上任意一点的二维坐标，可以很容易地推导出其对应的三维点坐标，只需要做尺度变换即可。具体公式见
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:球心"

\end_inset

：
\begin_inset Formula 
\begin{equation}
\left\{ \begin{aligned}Z & =-R\sqrt{1-\frac{\left(x-x_{c}\right)^{2}+\left(y-y_{c}\right)^{2}}{r^{2}}}\\
X & =\frac{\left(Z+Z_{cc}\right)\left(x-c_{x}\right)}{f_{x}}-X_{cc}\\
Y & =\frac{\left(Z+Z_{cc}\right)\left(y-c_{y}\right)}{f_{y}}-Y_{cc}
\end{aligned}
\right.\label{eq:球心}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
式中
\begin_inset Formula $R$
\end_inset

为标定球实际半径长度，
\begin_inset Formula $\left(X,Y,Z\right)^{T}$
\end_inset

坐标以球心为原点。根据式
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:球心"

\end_inset

即可为每个相机生成一组标记点点云。
\end_layout

\begin_layout Paragraph
初始平移向量
\begin_inset Formula $\mbi T$
\end_inset


\end_layout

\begin_layout Standard
本算法在建立世界坐标系时以球心为原点，因此由
\begin_inset Formula 
\begin{equation}
\begin{pmatrix}X_{cc}\\
Y_{cc}\\
Z_{cc}
\end{pmatrix}=\begin{bmatrix}\mbi R & \mbi T\end{bmatrix}\begin{pmatrix}X_{cw}\\
Y_{cw}\\
Z_{cw}\\
1
\end{pmatrix}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
令
\begin_inset Formula $(X_{cw},Y_{cw},Z_{cw})^{T}=(0,0,0)^{T}$
\end_inset

，可知
\begin_inset Formula $\mbi T=(X_{cc},Y_{cc},Z_{cc})^{T}$
\end_inset

，即每个相机的平移向量为球心在该相机坐标系下的三维坐标。
\end_layout

\begin_layout Paragraph
RANSAC得到旋转矩阵
\begin_inset Formula $\mbi R$
\end_inset


\end_layout

\begin_layout Standard
本算法先根据上述平移向量令每个相机坐标系下的三维点云平移到原点为中心，然后以第一个相机为参考求取相对的旋转矩阵。本标定算法可以通过RANSAC鲁棒地找到两个视角
标记点云的对应关系，去除噪声点和没有对应点的三维点，从而估计两个相机之间的旋转矩阵，再通过参考相机的旋转矩阵算出相对于第一个相机的旋转矩阵。以下描述了估计两个相
机之间旋转矩阵的步骤，其中参考相机的旋转矩阵已知。
\end_layout

\begin_layout Enumerate
对两个相机下的点云做规范化，使每个点的二范数为1，即强制每个点位于以原点为球心的单位圆上，仅利用点的角度信息；
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:ransac找点"

\end_inset

从两个点云中各选择两个点记为
\begin_inset Formula $\mbi P_{r},\mbi P_{e}$
\end_inset

，用来估计旋转矩阵。其中
\begin_inset Formula $\mbi P_{r}=\begin{bmatrix}\mbi P_{r1} & \mbi P_{r2}\end{bmatrix},\mbi P_{e}=\begin{bmatrix}\mbi P_{e1} & \mbi P_{e2}\end{bmatrix}$
\end_inset

。由于旋转矩阵要求是正交矩阵，故该问题描述为
\begin_inset Formula 
\begin{equation}
\begin{aligned}\min_{\mbi R} & \left\Vert \mbi R\mbi P_{r}-\mbi P_{e}\right\Vert _{2}\\
s.t. & \mbi R\mbi R^{T}=\mbi I
\end{aligned}
\end{equation}

\end_inset

该问题即为正交强迫一致问题，最早由Green于1952年提出
\begin_inset CommandInset citation
LatexCommand cite
key "orth1952"

\end_inset

，限于空间，具体推导过程本文不再给出。其解法是对
\begin_inset Formula $\mbi P_{e}\mbi P_{r}^{T}$
\end_inset

做SVD分解得到
\begin_inset Formula $\mbi P_{e}\mbi P_{r}^{T}=\mbi U\mbi S\mbi V^{T}$
\end_inset

，则最优
\begin_inset Formula $\mbi R=\mbi U\mbi V^{T}$
\end_inset

。
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:ransac数点"

\end_inset

在上一步的旋转矩阵假设下，令待测相机点云做旋转变换，此时两个点云应近似重合，对待测相机点云中每个点进行测试：找到其在参考相机点云中距离最近的点，如果小于一定阈值
，则认为是内点。统计这样的内点数目。
\end_layout

\begin_layout Enumerate
重复步骤
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:ransac找点"

\end_inset

和
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:ransac数点"

\end_inset

，选择使得内点数最多的旋转矩阵作为最终结果。
\end_layout

\begin_layout Paragraph
重新RANSAC
\end_layout

\begin_layout Standard
每个三维点在各视角的可见性在RANSAC的过程中可以同时记录，但由于某些点在两个视角中只出现了一次而被这两个视角都认为不可见，因此需要在已有全部三维点和旋转矩阵
的条件下重新判断可见性，以增加可见点的数量。将所有视角下RANSAC得到的三维点合并作为参考点云，重复步骤
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:ransac数点"

\end_inset

，此时产生的内点认为被当前相机可见。图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:before_sba"

\end_inset

展示了经过RANSAC得到的点的坐标，绿色点为其根据初始参数的重投影结果，蓝色点为原图上检测到的真实位置。
\end_layout

\begin_layout Subsubsection
非线性优化
\end_layout

\begin_layout Standard
非线性优化采用了稀疏光束法平差（Sparse Bundle Adjustment，SBA）方法
\begin_inset CommandInset citation
LatexCommand cite
key "Triggs00bundleadjustment"

\end_inset

，该方法假设给定多个视角下二维点对应三维坐标初始估计，以及每个相机的内参估计，利用这些信息完成一个优化问题，包括所有相机的内外参数以及三维点坐标，使得重投影误差
最小。SBA方法使用Levenberg-Marquardt非线性最小二乘算法的常规实现来解决与光束法平差（Bundle Adjustment，BA）相联系的稀疏
的大规模的优化问题，本文利用了Manolis Lourakis编写的C/C++算法库
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://users.ics.forth.gr/~lourakis/sba/
\end_layout

\end_inset


\end_layout

\end_inset

，其OpenCV封装版本的链接在此一并给出
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.uco.es/investiga/grupos/ava/node/39/
\end_layout

\end_inset


\end_layout

\end_inset

。经过SBA非线性优化，即可得到精确的相机参数，其重投影的平均误差可以达到0.08像素（原图尺寸为
\begin_inset Formula $5184\times3456$
\end_inset

）。如图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:after_sba"

\end_inset

所示，经过SBA优化后的重投影结果已经和真实二维点基本重合。
\end_layout

\begin_layout Subsubsection
尺度放缩
\end_layout

\begin_layout Standard
由于SBA并不对世界坐标系下的尺度进行优化，所以在最后一步需要校准坐标尺度，以尽量接近实际情况。本标定算法根据标记面片的两点间距计算尺度，强制令所有面片两点间距
的平均值等于实际值即可。在此假设面片在球面上的变形可以忽略。
\end_layout

\begin_layout Section
多视角不同分辨率相机标定
\begin_inset CommandInset label
LatexCommand label
name "sec:多视角不同分辨率相机标定"

\end_inset


\end_layout

\begin_layout Subsection
Kinect彩色相机和深度相机标定
\begin_inset CommandInset label
LatexCommand label
name "sub:kinect彩色相机和深度相机标定"

\end_inset


\end_layout

\begin_layout Standard
Kinect本身包含高分辨率（
\begin_inset Formula $1920\times1080$
\end_inset

）的彩色相机，以及低分辨率（
\begin_inset Formula $512\times424$
\end_inset

）的深度相机，其中深度相机除了可以返回深度图，还可以获得红外成像，通过其红外成像图和彩色图，用传统的双目相机标定方法即可完成标定，在此我们采用最普遍的棋盘格标定
方法，由于不是本文重点，不再赘述。
\end_layout

\begin_layout Standard
示意图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:示意图"

\end_inset

下方为被拍摄者正前方，均匀分布有10台高精度彩色相机，其可视区域为淡红色，背面有两台Kinect相机，其可视区域为淡蓝色。Kinect和彩色相机重叠的可视区域颜
色为淡紫色，Kinect之间的重叠区域为蓝色。中部的小圆上均匀分布有22个红色点，为标记圆环上的标记点。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/proj.pdf
	lyxscale 200
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
相机分布示意图（俯视）
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:示意图"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
标定物介绍
\end_layout

\begin_layout Standard
在标定物设计时需要考虑三方面：
\end_layout

\begin_layout Enumerate
Kinect分辨率有限，标记点必须很大才能被准确定位。如图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig: kinect拍摄"

\end_inset

，该图片分辨率为
\begin_inset Formula $720\times540$
\end_inset

 ，由原始分辨率图片裁剪得到，可以看出标记点较不清晰；
\end_layout

\begin_layout Enumerate
标记点必须也能被视野较小的彩色相机看到，彩色相机狭小的视场角限制了标记点的个数；
\end_layout

\begin_layout Enumerate
两个Kinect相距较远，很难保证标记点大量重叠，因此需要对标记点编码以唯一确定位置。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/marker1.jpg
	lyxscale 40
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
彩色相机拍摄图片
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:marker1"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/0_10000002_color.jpg
	lyxscale 20
	height 5cm

\end_inset


\begin_inset space \hspace{}
\length 0.5cm
\end_inset


\begin_inset Graphics
	filename figures/chpt3/0_11111111_color.jpg
	lyxscale 20
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Kinect拍摄图片
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig: kinect拍摄"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
基于以上三方面考虑，本文设计了一种环形编码标记物，如图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:marker2"

\end_inset

。该标记物粘贴成圆柱形作为标定的底座，可以与彩色相机同时完成标定采集。为了方便图像分割，实际中将标记编码打印在彩色纸张上，效果见图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:marker1"

\end_inset

。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/pattern_grid_new.jpg
	lyxscale 10
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
标记编码设计
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:marker2"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
该编码共有22位，其编码长度基于底座圆柱的半径和Kinect能识别的最小角点设定。每个单元分为两个半方半圆的黑白片，片上有圆形记为1，反之为0，具体参照表
\begin_inset CommandInset ref
LatexCommand ref
reference "table:marker"

\end_inset

。该编码是线性反馈移位寄存器的一种特例（linear-feedback shift register，LFSR）
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/Linear_feedback_shift_register
\end_layout

\end_inset


\end_layout

\end_inset

。LFSR能够对2的
\begin_inset Formula $x$
\end_inset

（
\begin_inset Formula $x$
\end_inset

为整数）次幂个数字进行二进制编码，使得这些位循环排列时任选连续
\begin_inset Formula $x$
\end_inset

个数字是唯一存在的。图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:marker2"

\end_inset

所示编码有22位，循环排列时任选5个数字可以唯一确定其位置，也就是说相机只要看到连续5个角点即可唯一确定其所在位置。举例说明，该图表示“01011
 11100 11010 01000 01”，约定编码从0开始，则11111所在位置为3，01010所在位置为20。同之前的设计理念相同，除了标记点不再出现任何
可能的角点，因此每个单元边缘均为弧形。
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
编码各单元意义对照
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "table:marker"

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features rotate="0" booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row topspace="3pt" bottomspace="2pt">
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
编码含义
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row topspace="3pt" bottomspace="2pt">
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
偶数位
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "1.2cm"
special "none"
height "2.5cm"
height_special "none"
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/偶0_.jpg
	lyxscale 20
	height 2cm

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "1.2cm"
special "none"
height "2.5cm"
height_special "none"
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/偶1_.jpg
	lyxscale 20
	height 2cm

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row topspace="3pt" bottomspace="2pt">
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
奇数位
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "1.2cm"
special "none"
height "2.5cm"
height_special "none"
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/奇0_.jpg
	lyxscale 20
	height 2cm

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "1.2cm"
special "none"
height "2.5cm"
height_special "none"
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/chpt3/奇1_.jpg
	lyxscale 20
	height 2cm

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
算法步骤
\end_layout

\begin_layout Standard
该标定算法假定彩色相机已经通过
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:高精度彩色相机标定"

\end_inset

所述算法标定得到准确的内外参数。首先在彩色相机拍摄的图片中找到标记点位置，通过RANSAC算法匹配得到相邻视角的对应关系，进而通过相机参数算出点的三维坐标。然后
利用所有彩色相机得到的三维点坐标拟合出空间中的圆形，从而唯一确定每个标记点的空间位置。最后在Kinect拍摄的彩色图片上找到标记点，利用已有的三维坐标，拟合出K
inect外参。接下来对其中的几个关键步骤做详细介绍。
\end_layout

\begin_layout Subsubsection
寻找标记点
\end_layout

\begin_layout Standard
此处找标记点的候选点和
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:寻找标记点"

\end_inset

类似，首先进行图像分割，找出角点存在的区域，然后找到角点作为候选点。接下来要筛选候选点，完成匹配，计算出每个点的三维坐标：
\end_layout

\begin_layout Enumerate
利用RANSAC算法找到一条点数最多的直线，认为直线穿过的点为正确的标记点：
\end_layout

\begin_deeper
\begin_layout Enumerate
选择任意两点计算得到一条直线，即选定两点为
\begin_inset Formula $\mbi P_{1},\mbi P_{2}$
\end_inset

，则直线上任一点
\begin_inset Formula $\mbi P$
\end_inset

应满足
\begin_inset Formula 
\begin{equation}
\mbi P=\frac{\left\Vert \mbi P-\mbi P_{1}\right\Vert _{2}}{\left\Vert \mbi P_{1}-\mbi P_{2}\right\Vert _{2}}\left(\mbi P_{1}-\mbi P_{2}\right)+\mbi P_{1}
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
计算其他标记点与直线的距离作为误差
\begin_inset Formula 
\begin{equation}
dist=\left\Vert \left\Vert \mbi P-\mbi P_{1}\right\Vert _{2}^{2}-\frac{\left(\left(\mbi P-\mbi P_{1}\right)^{T}\cdot\left(\mbi P_{2}-\mbi P_{1}\right)\right)^{2}}{\left\Vert \mbi P_{1}-\mbi P_{2}\right\Vert _{2}^{2}}\right\Vert _{2}
\end{equation}

\end_inset


\begin_inset Newline newline
\end_inset

误差小于阈值的点作为内点，统计内点个数；
\end_layout

\begin_layout Enumerate
重复以上两步，选择使内点个数最多的直线作为最终拟合结果。
\end_layout

\end_deeper
\begin_layout Enumerate
确定每个点在编码中的所在位置：同图
\begin_inset CommandInset ref
LatexCommand ref
reference "标记点示意"

\end_inset

所述方法类似，选择相邻两点的中垂线，各延伸一段距离取两点像素，比较像素值确定是0还是1；
\end_layout

\begin_layout Enumerate
利用该视角下的一串编码找到其在整个编码中的唯一位置，将0和1转换成每个点的绝对编号；
\end_layout

\begin_layout Enumerate
选取相邻两个视角，匹配绝对编号相同的标记点，通过相机参数算出其三维坐标。该问题为超定问题，由于噪声存在，两个二维点所在对极线反投影到空间可能并不相交，因此此处采
用opencv的triangulatePoints函数得到最小二乘近似解
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.opencv.org/modules/calib3d/doc/calib3d.html
\end_layout

\end_inset


\end_layout

\end_inset

。
\end_layout

\begin_layout Subsubsection
拟合圆形
\begin_inset CommandInset label
LatexCommand label
name "sub:拟合圆形"

\end_inset


\end_layout

\begin_layout Standard
由图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:示意图"

\end_inset

可知，Kinect和彩色相机之间重叠区域非常少，无法直接进行匹配。因此需要通过彩色相机算出其可见区域内的标记点真是空间坐标，通过拟合出空间中的三维圆形，从而推断
出其不可见区域，也就是Kinect可见的标记点的三维坐标。在此，本算法限制这些标记点等距的位于一个圆上，这个圆在空间中在同一平面。
\end_layout

\begin_layout Enumerate
拟合平面：记已有的三维点为
\begin_inset Formula $\mbi P=\begin{bmatrix}\mbi P_{1} & \mbi P_{2} & \cdots & \mbi P_{count}\end{bmatrix}$
\end_inset

，理论上这些点满足
\begin_inset Formula $\mbi P_{i}^{T}\mbi n=t$
\end_inset

，其中
\begin_inset Formula $\mbi n$
\end_inset

是模为1的平面法向，
\begin_inset Formula $t$
\end_inset

是待估常系数。由于噪声存在，本算法用最小二乘方法得到方程
\begin_inset Formula $\mbi P^{T}\mbi n=\mbi t_{count\times1}$
\end_inset

的近似解。最后将每个点投影到平面上以完成下面的处理；
\end_layout

\begin_layout Enumerate
拟合圆形：以下记待估圆心为
\begin_inset Formula $\mbi P_{c}$
\end_inset

，半径为
\begin_inset Formula $r$
\end_inset

。圆形拟合本身是一个二次问题
\begin_inset Formula 
\begin{equation}
\min_{r,\mbi P_{c}}\sum_{i=1}^{count}\left\Vert \left\Vert \mbi P_{c}-\mbi P_{i}\right\Vert _{2}-r\right\Vert _{2}
\end{equation}

\end_inset

该问题没有解析解，理论上可以通过多次迭代得到较好的近似解，本算法采用了最小二乘方法得到了线性近似解，实际中效果可以满足要求。圆上点应满足方程
\begin_inset Formula 
\begin{equation}
\left(X_{i}-X_{c}\right)^{2}+\left(Y_{i}-Y_{c}\right)^{2}+\left(Z_{i}-Z_{c}\right)^{2}=r^{2}
\end{equation}

\end_inset

令
\begin_inset Formula 
\begin{equation}
\begin{cases}
A & =-2X_{c}\\
B & =-2Y_{c}\\
C & =-2Z_{c}\\
D & =X_{c}^{2}+Y_{c}^{2}+Z_{c}^{2}-r^{2}
\end{cases}
\end{equation}

\end_inset

则可得到
\begin_inset Formula 
\begin{equation}
X_{i}^{2}+Y_{i}^{2}+Z_{i}^{2}+AX_{i}+BY_{i}+CZ_{i}+D=0
\end{equation}

\end_inset

也即
\begin_inset Formula 
\begin{equation}
\begin{bmatrix}X_{1} & Y_{1} & Z_{1} & 1\\
X_{2} & Y_{2} & Z_{2} & 1\\
 & \vdots\\
X_{count} & Y_{count} & Z_{count} & 1
\end{bmatrix}\begin{pmatrix}A\\
B\\
C\\
D
\end{pmatrix}=-\begin{pmatrix}X_{1}^{2}+Y_{1}^{2}+Z_{1}^{2}\\
X_{2}^{2}+Y_{2}^{2}+Z_{2}^{2}\\
\vdots\\
X_{count}^{2}+Y_{count}^{2}+Z_{count}^{2}
\end{pmatrix}
\end{equation}

\end_inset

其中
\begin_inset Formula $(X_{i},Y_{i},Z_{i})^{T}$
\end_inset

为已知点坐标，因此通过最小二乘可以得到
\begin_inset Formula $A,B,C,D$
\end_inset

，从而根据式
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:求圆心"

\end_inset

反解出
\begin_inset Formula $(X_{c},Y_{c},Z_{c})$
\end_inset

和
\begin_inset Formula $r$
\end_inset

；
\begin_inset Formula 
\begin{equation}
\left\{ \begin{aligned}X_{c} & =-\frac{A}{2}\\
Y_{c} & =-\frac{B}{2}\\
Z_{c} & =-\frac{C}{2}\\
r & =\sqrt{X_{c}^{2}+Y_{c}^{2}+Z_{c}^{2}-D^{2}}
\end{aligned}
\right.\label{eq:求圆心}
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
最后根据已知点估计出未知标记点在圆上的位置，对所有相邻点的夹角取平均即可。
\end_layout

\begin_layout Subsubsection
计算外参
\end_layout

\begin_layout Standard
Kinect内参已由
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:kinect彩色相机和深度相机标定"

\end_inset

节得到，最后任务是根据Kinect拍摄图片上的标记点坐标和由
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:拟合圆形"

\end_inset

节得到的三维坐标计算出Kinect外参矩阵。该步骤直接调用 opencv 的 solvePnP 函数即可
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.opencv.org/modules/calib3d/doc/calib3d.html
\end_layout

\end_inset


\end_layout

\end_inset

。
\end_layout

\end_body
\end_document
